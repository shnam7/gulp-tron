
declare module 'gulp-coffee' {
    import type { ConfigureOptions } from 'rtlcss'
    import type { BabelOptions } from './babel.js'
    export type CoffeeConfig = {
        coffee?: any,               // A reference to a custom CoffeeScript version/fork
        sourceMap?: boolean,
        inlineMap: boolean,         // if true, inline sourceMap is generated
        filename?: string,          // the filename to use for the source map. It can include a path (relative or absolute)
        bare?: boolean,             //  if true, output without the top-level function safety wrapper
        header?: boolean,           // if true, output the Generated by CoffeeScript header
        transpile?: BabelOptions,
        ast?: boolean,              // if true, return an abstract syntax tree of the input CoffeeScript source
        sourceRoot?: boolean,
        literate?: boolean          // literate mode. refer to coffeescript docs
    }

    export type { ConfigureOptions }
    export default function coffeeG(options: ConfigureOptions): stream.Transform
}
