(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{72:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return o}));var a=n(2),r=n(6),l=(n(0),n(98)),i={title:"GCSSBuilder"},s={unversionedId:"builtin-builders/GCSSBuilder",id:"builtin-builders/GCSSBuilder",isDocsHomePage:!1,title:"GCSSBuilder",description:"Transpiles sass/scss/less/postcss files into css. postcss can be used together with sass/scss/less.",source:"@site/docs/builtin-builders/GCSSBuilder.md",slug:"/builtin-builders/GCSSBuilder",permalink:"/gulp-tron/builtin-builders/GCSSBuilder",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/builtin-builders/GCSSBuilder.md",version:"current",sidebar:"docs",previous:{title:"GConcatBuilder",permalink:"/gulp-tron/builtin-builders/GConcatBuilder"},next:{title:"GImagesBuilder",permalink:"/gulp-tron/builtin-builders/GImagesBuilder"}},c=[{value:"Builder specific Options",id:"builder-specific-options",children:[]},{value:"Notes",id:"notes",children:[]},{value:"Example",id:"example",children:[]}],b={rightToc:c};function o(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Transpiles sass/scss/less/postcss files into css. postcss can be used together with sass/scss/less.\nPostCSS is enabled by default (from v3.1) unless it's turned off intentionally."),Object(l.b)("h3",{id:"builder-specific-options"},"Builder specific Options"),Object(l.b)("p",null,"Available options for BuildConfig.buildOptions:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Option"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Default"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"sourceMap"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"boolean"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"false"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Enable sourceMap generation.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"lint"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"boolean"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"false"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Enable linter.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"minify"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"boolean"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"false"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Generate minified *.min.js in addition to non-minified output.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"minifyOnly"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"boolean"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"false"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Generate minified *.min.js files only with no non-minified output.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"outFileOnly"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"boolean"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"true"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Generate concatenated outfile only. This option is valid only when BuildConfig.outFile is set.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"postcss"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"boolean"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"true"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Enable PostCSS. PostCSS automatically handles auto-prefixing without autoPrefixer.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"sourceType"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"'scss'"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Specifies input source type. Possible values are 'css', 'scss', 'sass', 'less'.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"autoPrefixer"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"boolean"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"true"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Enable autoPrefixer. If postcss option is enabled(default), this is ignored in preference to auto-prefixing feature of postcss.")))),Object(l.b)("h3",{id:"notes"},"Notes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"linter is using stylelint with postcss. So, if lint is enabled, postcss is automatically enabled and the required postcss packages should be installed.")),Object(l.b)("h3",{id:"example"},"Example"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const sass = {\n    name: 'sass',\n    builder: 'GCSSBuilder',\n    src: [upath.join(srcRoot, 'scss/**/*.scss')],\n    dest: upath.join(destRoot, 'css'),\n    buildOptions: {\n        sourceType: 'scss',\n        sourceMap: true,\n        lint: true,\n        minify: true,\n        // autoPrefixer: true,\n        postcss: true\n    },\n    moduleOptions: {\n        sass: { includePaths: ['assets/scss'] },\n        postcss: {\n            plugins: [\n                require('postcss-cssnext'),\n                require('postcss-utilities'),\n                require('lost'),\n            ]\n        }\n        stylelint: {\n            configFile: upath.join(srcRoot, '.stylelintrc')\n        }\n    }\n};\n")))}o.isMDXComponent=!0},98:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return O}));var a=n(0),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),o=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=o(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),u=o(n),d=a,O=u["".concat(i,".").concat(d)]||u[d]||p[d]||l;return n?r.a.createElement(O,s(s({ref:t},b),{},{components:n})):r.a.createElement(O,s({ref:t},b))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var b=2;b<l;b++)i[b]=n[b];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);