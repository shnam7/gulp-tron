(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{65:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return a})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(2),i=n(6),o=(n(0),n(98)),s={id:"extension",title:"RTB Extension"},a={unversionedId:"guide/extension",id:"guide/extension",isDocsHomePage:!1,title:"RTB Extension",description:"Extension to RTB API",source:"@site/docs/guide/05-extension.md",slug:"/guide/extension",permalink:"/gulp-tron/guide/extension",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/guide/05-extension.md",version:"current",sidebar:"docs",previous:{title:"Builders",permalink:"/gulp-tron/guide/builders"},next:{title:"gulp-tron",permalink:"/gulp-tron/api/gulp-tron"}},c=[{value:"Extension to RTB API",id:"extension-to-rtb-api",children:[]},{value:"Registering extensions",id:"registering-extensions",children:[]},{value:"Using extensions",id:"using-extensions",children:[]},{value:"Built-in extensions",id:"built-in-extensions",children:[]}],l={rightToc:c};function u(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"extension-to-rtb-api"},"Extension to RTB API"),Object(o.b)("p",null,"RTB Extension is a module that can be added to RTB API. Actually it is a function returning BuildFunction."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"type RTBExtension = (...args: any[]) => BuildFunction;\n")),Object(o.b)("p",null,"It receives arbitrary number of arguments and returns a ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"builders#buildfunction"}),"BuildFunction")," object. With this RTB instance, users can do necessary operations during the build process. Once the extension is ready, it can be registered to RTB extension set using tron.registerExtension() function."),Object(o.b)("p",null,"If the Extension returns promise, then it handled according to the promise processing mechanism involving syncMode state. Otherwise, it runs asynchronously. If synchronous actions are required, you can also use rtb.promise() function instead of returning a promise."),Object(o.b)("h2",{id:"registering-extensions"},"Registering extensions"),Object(o.b)("p",null,"RTB extensions can be registered to RTB API using tron.registerExtension() function."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js",metastring:'title="extensions/ext-custom.js"',title:'"extensions/ext-custom.js"'}),"const tron = require('gulp-tron');\n\ntron.registerExtension('customExt1', (...args) => (rtb) => {\n    console.log(`CustomExt1 called. buildName=${rtb.name} args= ${args}`);\n});\n\ntron.registerExtension('customExt2', (...args) => (rtb) => {\n    console.log(`CustomExt2 called. buildName=${rtb.name} args= ${args}`);\n});\n")),Object(o.b)("h2",{id:"using-extensions"},"Using extensions"),Object(o.b)("p",null,"If the extension are in single or multiple files, it can be loaded using tron.loadExtension() function. Once loaded, it's avaiable in RTB API."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js",metastring:'title="gulpfile.js"',title:'"gulpfile.js"'}),"tron.loadExtension('./extensions/*.js'));\n\n//--- custom extension\nconst customExt = {\n    name: 'custom-ext',\n    builder: rtb => rtb.customExt1('a', 'b').customExt2('c', 'd')\n};\n")),Object(o.b)("h2",{id:"built-in-extensions"},"Built-in extensions"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"../extension/coffeescript"}),"ext-coffeeScript"),": CoffeeScript transpiler."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"../extension/css"}),"ext-css"),": Stylesheet processor supporting sass/scss/less with postcss."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"../extension/javascript"}),"ext-javascript"),": JavaScript process with babel support."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"../extension/markdown"}),"ext-markdown"),": Markdown transpiler."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"../extension/twig"}),"ext-twig"),": Twig builder."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"../extension/typescript"}),"ext-typescript"),": TypeScript transpiler."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"../extension/webpack"}),"ext-webpack"),": Webpack builder.")))}u.isMDXComponent=!0},98:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),u=function(e){var t=i.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},b=function(e){var t=u(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=u(n),d=r,m=b["".concat(s,".").concat(d)]||b[d]||p[d]||o;return n?i.a.createElement(m,a(a({ref:t},l),{},{components:n})):i.a.createElement(m,a({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:r,s[1]=a;for(var l=2;l<o;l++)s[l]=n[l];return i.a.createElement.apply(null,s)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);