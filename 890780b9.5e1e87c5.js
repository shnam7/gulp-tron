(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{118:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return j}));var a=n(0),r=n.n(a);function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},b=Object.keys(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=r.a.createContext({}),o=function(e){var t=r.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=o(e.components);return r.a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,b=e.originalType,l=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),p=o(n),O=a,j=p["".concat(l,".").concat(O)]||p[O]||u[O]||b;return n?r.a.createElement(j,c(c({ref:t},i),{},{components:n})):r.a.createElement(j,c({ref:t},i))}));function j(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var b=n.length,l=new Array(b);l[0]=O;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var i=2;i<b;i++)l[i]=n[i];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"},84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return o}));var a=n(2),r=n(6),b=(n(0),n(118)),l={title:"ext-css"},c={unversionedId:"extension/css",id:"extension/css",isDocsHomePage:!1,title:"ext-css",description:"Transpiles sass/scss/less/postcss files into css. postcss can be used together with sass/scss/less.",source:"@site/docs\\extension\\css.md",slug:"/extension/css",permalink:"/gulp-tron/extension/css",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/extension/css.md",version:"current",sidebar:"docs",previous:{title:"ext-coffeesctipt",permalink:"/gulp-tron/extension/coffeescript"},next:{title:"ext-javascript",permalink:"/gulp-tron/extension/javascript"}},s=[{value:"Usage",id:"usage",children:[]},{value:"Options",id:"options",children:[]},{value:"rtb.buildOptions (BuildConfig.buildOptions)",id:"rtbbuildoptions-buildconfigbuildoptions",children:[]},{value:"rtb.moduleOptions (BuildConfig.moduleOptions)",id:"rtbmoduleoptions-buildconfigmoduleoptions",children:[]},{value:"Example",id:"example",children:[]},{value:"Notes",id:"notes",children:[]}],i={rightToc:s};function o(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(a.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"Transpiles sass/scss/less/postcss files into css. postcss can be used together with sass/scss/less.\nPostCSS is enabled by default (from v3.1) unless it's turned off intentionally."),Object(b.b)("h3",{id:"usage"},"Usage"),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"rtb.css(options={});\n")),Object(b.b)("h3",{id:"options"},"Options"),Object(b.b)("p",null,"options will override rtb.moduleOptions."),Object(b.b)("h3",{id:"rtbbuildoptions-buildconfigbuildoptions"},"rtb.buildOptions (BuildConfig.buildOptions)"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Option"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Default"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"sourceType"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"'scss'"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Specifies input source type. Possible values are 'css', 'scss', 'sass', 'less'.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"postcss"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"boolean"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Enable PostCSS.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"autoprefixer"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"boolean"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"true"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Enable autoprefixer.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"lint"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"boolean"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"false"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Enable lint.")))),Object(b.b)("h3",{id:"rtbmoduleoptions-buildconfigmoduleoptions"},"rtb.moduleOptions (BuildConfig.moduleOptions)"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Property"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"Default"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"sass"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Object"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"{}"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Options to gulp-sass.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"autoprefixer"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Object"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"{}"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Options to gulp-autoprefixer or autoprefixer(if postcss enabled).")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"postcss"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Object"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"{}"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Options to gulp-postcss.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"postcss.plugins"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"array"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"[]"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"plugins to gulp-postcss.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"stylelint"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Object"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"{}"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Options to gulp-style or stylelint(if postcss enabled).")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"postcssReporter"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Object"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"{}"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Options to postcss-reporter. Valid only when rtb.buildOptions.postcss is true.")))),Object(b.b)("h3",{id:"example"},"Example"),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const tron = require('gulp-tron');\n\nconst coffee = {\n    name: 'style',\n    builder: (rtb) => rtb.src().css().dest(),\n    src: ['assets/style/**/*.scss'],\n    dest: 'www/css',\n};\n")),Object(b.b)("h3",{id:"notes"},"Notes"),Object(b.b)("p",null,"This extension is for custom processing. Use ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"../builtin-builders/GCSSBuilder"}),"GCSSBuilder")," for CSS file processiing."))}o.isMDXComponent=!0}}]);